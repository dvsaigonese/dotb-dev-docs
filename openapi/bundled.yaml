openapi: 3.0.0
info:
  version: '1.0'
  title: DOTB API
  description: |
    # Xác thực

    **Mô tả:** Nhận thông tin đăng nhập và trả về `access_token` cùng các trường liên quan, dùng token để truy cập vào các endpoint yêu cầu xác thực.

    ## Bước 1: Đăng nhập để lấy access_token

    Sinh `access_token` bằng api đăng nhập (`/oauth2/token`) với tên đăng nhập và mật khẩu.

    ### Ví dụ Request để đăng nhập

    ```
    curl -X POST 'https://your-base-url/rest/v11_3/oauth2/token' \
    --H 'Content-Type: application/json' \
    --d '{
      "grant_type": "password",       // Kiểu grant, luôn là "password"
      "client_id": "dotb",            // Client ID của ứng dụng, luôn là "dotb"
      "client_secret": "",            // Client secret, có thể để trống.
      "username": "dotbedu@dotb.vn",  // Tên đăng nhập của user.
      "password": "123456789",        // Mật khẩu của user.
      "platform": "base"              // Nguồn hoặc nền tảng sinh token.
    }'
    ```

    ### Response

    ```json
    {
      "access_token": "0a3abbc1-e0a9-4def-bc7f-baecd9b05fa1",   // Token xác thực
      "expires_in": 3600,                                       // Thời gian token hết hạn (tính bằng giây)
      "token_type": "bearer",                                   // Loại token
      "scope": null,                                            // Phạm vi token được cấp, không áp dựng thì null
      "refresh_token": "50a98d3c-6f45-42a2-86b3-466c7d6a5d36",  // Refresh token dùng để lấy `access_token` mới.
      "refresh_expires_in": 1209599,                            // Thời gian hết hạn của `refresh_token` (tính bằng giây)
      "download_token": "0ccfe4ee-41d9-4b1b-b3ab-f0687723eb70"  // Token phụ dùng cho mục đích tải tài nguyên
    }
    ```        

    ## Bước 2: Thêm header Xác Thực

    Thêm header `Authorization: Bearer {access_token}` vào các request xử lý dữ liệu và thực hiện gọi các api mà DOTB cung cấp.

    ```json
    curl --location --request GET 'https://your-base-url/rest/v11_3/Contacts' \
    --header 'Authorization: Bearer 0a3abbc1-e0a9-4def-bc7f-baecd9b05fa1'
    ```

    # Biểu thức bộ lọc (filter)

    ## Tổng quan

    Phần này sẽ nói về biểu thức bộ lọc trong các API liên quan tới List, nhằm hướng dẫn cách sử dụng trường <code>filter</code> hiệu quả hơn.

    ## Cấu trúc của Bộ Lọc

    Bộ lọc được biểu diễn dưới dạng một mảng JSON với cấu trúc linh hoạt nhưng tuân theo các quy tắc nhất định. Hiểu rõ cấu trúc này là chìa khóa để tạo các bộ lọc hiệu quả:

    ### 1. Cấu trúc cơ bản

    Một bộ lọc đơn giản nhất có dạng:

    ```
    "filter" : [{
      "field_name": {
        "operator": "value"
      }
    }]
    ```

    Ví dụ: `"filter":[{"name":{"$equals":"ABC Company"}}]`

    ### 2. Cấu trúc nhiều điều kiện

    Để kết hợp nhiều điều kiện:

    ```
    "filter" : [{
      "$operator": [
        { "field1": { ... } },
        { "field2": { ... } }
      ]
    }]
    ```

    Ví dụ:

    ```
    "filter" : [{
      "$and": [
        {"industry": {"$equals": "Technology"}},
        {"annual_revenue": {"$gt": 1000000}}
      ]
    }]
    ```

    ### 3. Các thành phần chính

    - **Mảng ngoài cùng**: Luôn bắt đầu bằng dấu ngoặc vuông `[]`
    - **Đối tượng điều kiện**: Mỗi điều kiện là một đối tượng JSON trong mảng
    - **Toán tử logic** (`$and`, `$or`, `$not`): Dùng để nhóm các điều kiện
    - **Tên trường**: Khóa đầu tiên trong mỗi điều kiện
    - **Toán tử so sánh**: Đặt trong đối tượng con của trường (`$equals`, `$contains`, ...)
    - **Giá trị**: Có thể là chuỗi, số, boolean, mảng hoặc null

    ### 4. Cấu trúc lồng nhau

    Các điều kiện có thể lồng nhau nhiều cấp:

    ```
    "filter" : [{
      "$and": [
        {"field1": ...},
        {
          "$or": [
            {"field2": ...},
            {"field3": ...}
          ]
        }
      ]
    }]
    ```

    ### 5. Quy tắc giá trị

    - **Chuỗi**: Đặt trong dấu nháy kép `"value"`
    - **Số**: Ghi trực tiếp không dấu nháy `1000`
    - **Boolean**: `true` hoặc `false`
    - **Mảng**: `["value1", "value2"]`
    - **Giá trị rỗng**: Dùng chuỗi rỗng `""`

    ### 6. Ví dụ đầy đủ

    ```
    "filter": [{
      "$and": [
        {
          "$or": [
            {"industry": {"$in": ["Technology", "Finance"]}},
            {"annual_revenue": {"$gte": 500000}}
          ]
        },
        {
          "date_entered": {"$not_empty": ""}
        }
      ]
    },
    {
      "assigned_user_id": {"$in": ["seed_will", "seed_sarah"]}
    }]
    ```

    Cấu trúc này nghĩa là:  
    (Ngành là Technology HOẶC Finance HOẶC Doanh thu ≥ $500,000) VÀ Có ngày tạo VÀ Được gán cho Will hoặc Sarah

    ## Toán tử

    Toán tử là các biểu thức được sử dụng bởi bộ lọc để đại diện cho các toán tử truy vấn.

    ### Loại trường: multienum

    | Toán tử                       | Mô tả                               | Ví dụ                                                                          |
    |-------------------------------|-------------------------------------|--------------------------------------------------------------------------------|
    | <nobr>`$contains`</nobr>      | Chứa ít nhất một trong các giá trị  | `"filter":[{"account_categories":{"$contains":["Technology","Finance"]}}]`     |
    | <nobr>`$not_contains`</nobr>  | Không chứa bất kỳ giá trị nào trong | `"filter":[{"account_categories":{"$not_contains":["Technology","Finance"]}}]` |

    ### Loại trường: enum

    | Toán tử            | Mô tả              | Ví dụ                                                          |
    |--------------------|--------------------|----------------------------------------------------------------|
    | <nobr>`$in`</nobr>         | Là một trong       | `"filter":[{"industry":{"$in":["Technology","Finance"]}}]`     |
    | <nobr>`$not_in`</nobr>     | Không là một trong | `"filter":[{"industry":{"$not_in":["Technology","Finance"]}}]` |
    | <nobr>`$empty`</nobr>      | Trống              | `"filter":[{"industry":{"$empty":""}}]`                       |
    | <nobr>`$not_empty`</nobr>  | Không trống        | `"filter":[{"industry":{"$not_empty":""}}]`                   |

    ### Loại trường: varchar, name, email, text, textarea

    | Toán tử            | Mô tả              | Ví dụ                                             |
    |--------------------|--------------------|---------------------------------------------------|
    | <nobr>`$equals`</nobr>   | Khớp chính xác     | `"filter":[{"name":{"$equals":"Acme Corp"}}]`     |
    | <nobr>`$starts`</nobr>   | Bắt đầu bằng       | `"filter":[{"name":{"$starts":"A"}}]`             |
    | <nobr>`$empty`</nobr>    | Trống              | `"filter":[{"name":{"$empty":""}}]`               |
    | <nobr>`$not_empty`</nobr>| Không trống        | `"filter":[{"name":{"$not_empty":""}}]`           |

    ### Loại trường: currency, int, double, float, decimal

    | Toán tử               | Mô tả                  | Ví dụ                                                         |
    |-----------------------|------------------------|---------------------------------------------------------------|
    | <nobr>`$equals`</nobr>   | Bằng                   | `"filter":[{"annual_revenue":{"$equals":1000000}}]`           |
    | <nobr>`$not_equals`</nobr>| Không bằng            | `"filter":[{"annual_revenue":{"$not_equals":1000000}}]`       |
    | <nobr>`$gt`</nobr>        | Lớn hơn                | `"filter":[{"annual_revenue":{"$gt":1000000}}]`               |
    | <nobr>`$lt`</nobr>        | Nhỏ hơn                | `"filter":[{"annual_revenue":{"$lt":1000000}}]`               |
    | <nobr>`$gte`</nobr>       | Lớn hơn hoặc bằng      | `"filter":[{"annual_revenue":{"$gte":1000000}}]`              |
    | <nobr>`$lte`</nobr>       | Nhỏ hơn hoặc bằng      | `"filter":[{"annual_revenue":{"$lte":1000000}}]`              |
    | <nobr>`$between`</nobr>   | Trong khoảng           | `"filter":[{"annual_revenue":{"$between":[500000,1500000]}}]` |

    ### Loại trường: date (yyyy-mm-dd)

    | Toán tử                   | Mô tả                  | Ví dụ                                                                          |
    |---------------------------|------------------------|--------------------------------------------------------------------------------|
    | <nobr>`$equals`</nobr>       | Bằng (ngày cụ thể)     | `"filter":[{"date_entered":{"$equals":"2023-01-01"}}]`                         |
    | <nobr>`$dateBetween`</nobr>  | Trong khoảng           | `"filter":[{"date_entered":{"$dateBetween":["2023-01-01","2023-12-31"]}}]`     |
    | <nobr>`last_month`</nobr>    | Tháng trước            | `"filter":[{"date_entered":{"last_month":""}}]`                                |
    | <nobr>`this_month`</nobr>    | Tháng này              | `"filter":[{"date_entered":{"this_month":""}}]`                                |
    | <nobr>`next_month`</nobr>    | Tháng sau              | `"filter":[{"date_entered":{"next_month":""}}]`                                |
    | <nobr>`$lt`</nobr>           | Trước                  | `"filter":[{"date_entered":{"$lt":"2023-01-01"}}]`                             |
    | <nobr>`$gt`</nobr>           | Sau                    | `"filter":[{"date_entered":{"$gt":"2023-01-01"}}]`                             |
    | <nobr>`yesterday`</nobr>     | Hôm qua                | `"filter":[{"date_entered":{"yesterday":""}}]`                                 |
    | <nobr>`today`</nobr>         | Hôm nay                | `"filter":[{"date_entered":{"today":""}}]`                                     |
    | <nobr>`tomorrow`</nobr>      | Ngày mai               | `"filter":[{"date_entered":{"tomorrow":""}}]`                                  |
    | <nobr>`last_7_days`</nobr>   | 7 ngày qua             | `"filter":[{"date_entered":{"last_7_days":""}}]`                               |
    | <nobr>`next_7_days`</nobr>   | 7 ngày tới             | `"filter":[{"date_entered":{"next_7_days":""}}]`                               |
    | <nobr>`last_30_days`</nobr>  | 30 ngày qua            | `"filter":[{"date_entered":{"last_30_days":""}}]`                              |
    | <nobr>`next_30_days`</nobr>  | 30 ngày tới            | `"filter":[{"date_entered":{"next_30_days":""}}]`                              |
    | <nobr>`last_year`</nobr>     | Năm ngoái              | `"filter":[{"date_entered":{"last_year":""}}]`                                 |
    | <nobr>`this_year`</nobr>     | Năm nay                | `"filter":[{"date_entered":{"this_year":""}}]`                                 |
    | <nobr>`next_year`</nobr>     | Năm sau                | `"filter":[{"date_entered":{"next_year":""}}]`                                 |
    | <nobr>`$not_empty`</nobr>    | Không trống            | `"filter":[{"date_entered":{"$not_empty":""}}]`                                |
    | <nobr>`$empty`</nobr>        | Trống                  | `"filter":[{"date_entered":{"$empty":""}}]`                                    |

    ### Loại trường: datetime, datetimecombo (yyyy-mm-ddThh:mm:ss+07:00)

    | Toán tử                   | Mô tả                                | Ví dụ                                                                 |
    |---------------------------|--------------------------------------|-----------------------------------------------------------------------|
    | <nobr>`$starts`</nobr>        | Khớp chính xác (ngày giờ)             | `"filter":[{"date_modified":{"$starts":"2025-06-20T00:00:00+07:00"}}]` |
    | <nobr>`$dateBetween`</nobr>    | Trong khoảng                         | `"filter":[{"date_modified":{"$dateBetween":["2025-06-20T00:00:00+07:00","2025-06-20T00:00:00+07:00"]}}]` |
    | <nobr>`last_month`</nobr>      | Tháng trước                          | `"filter":[{"date_modified":{"last_month":""}}]`                     |
    | <nobr>`this_month`</nobr>      | Tháng này                            | `"filter":[{"date_modified":{"this_month":""}}]`                     |
    | <nobr>`next_month`</nobr>      | Tháng sau                            | `"filter":[{"date_modified":{"next_month":""}}]`                     |
    | <nobr>`$lte`</nobr>            | Trước                                | `"filter":[{"date_modified":{"$lte":"2025-06-20T00:00:00+07:00"}}]`   |
    | <nobr>`$gte`</nobr>            | Sau                                  | `"filter":[{"date_modified":{"$gte":"2025-06-20T00:00:00+07:00"}}]`   |
    | <nobr>`yesterday`</nobr>       | Hôm qua                              | `"filter":[{"date_modified":{"yesterday":""}}]`                      |
    | <nobr>`today`</nobr>           | Hôm nay                              | `"filter":[{"date_modified":{"today":""}}]`                          |
    | <nobr>`tomorrow`</nobr>        | Ngày mai                             | `"filter":[{"date_modified":{"tomorrow":""}}]`                       |
    | <nobr>`last_7_days`</nobr>     | 7 ngày qua                           | `"filter":[{"date_modified":{"last_7_days":""}}]`                    |
    | <nobr>`next_7_days`</nobr>     | 7 ngày tới                           | `"filter":[{"date_modified":{"next_7_days":""}}]`                    |
    | <nobr>`last_30_days`</nobr>    | 30 ngày qua                          | `"filter":[{"date_modified":{"last_30_days":""}}]`                   |
    | <nobr>`next_30_days`</nobr>    | 30 ngày tới                          | `"filter":[{"date_modified":{"next_30_days":""}}]`                   |
    | <nobr>`last_year`</nobr>       | Năm ngoái                            | `"filter":[{"date_modified":{"last_year":""}}]`                      |
    | <nobr>`this_year`</nobr>       | Năm nay                              | `"filter":[{"date_modified":{"this_year":""}}]`                      |
    | <nobr>`next_year`</nobr>       | Năm sau                              | `"filter":[{"date_modified":{"next_year":""}}]`                      |
    | <nobr>`$not_empty`</nobr>      | Không trống                          | `"filter":[{"date_modified":{"$not_empty":""}}]`                     |

    ### Loại trường: bool

    | Toán tử               | Mô tả              | Ví dụ                                       |
    |-----------------------|--------------------|---------------------------------------------|
    | <nobr>`$equals`</nobr>     | Là (true/false)    | `"filter":[{"is_active":{"$equals":true}}]` |

    ### Loại trường: relate

    | Toán tử               | Mô tả                                    | Ví dụ                                                             |
    |-----------------------|------------------------------------------|-------------------------------------------------------------------|
    | <nobr>`$in`</nobr>          | Được gán cho một trong (danh sách ID)     | `"filter":[{"assigned_user_id":{"$in":["user_id1","user_id2"]}}]`    |
    | <nobr>`$not_in`</nobr>      | Không được gán cho bất kỳ (danh sách ID) | `"filter":[{"assigned_user_id":{"$not_in":["user_id1","user_id2"]}}]` |

    ### Loại trường: teamset

    | Toán tử               | Mô tả                                                       | Ví dụ                                                                 |
    |-----------------------|-------------------------------------------------------------|-----------------------------------------------------------------------|
    | <nobr>`$in`</nobr>          | Chứa ít nhất một trong các giá trị (danh sách team ID)        | `"filter":[{"team_set_id":{"$in":["team_id1","team_id2"]}}]`         |
    | <nobr>`$not_in`</nobr>      | Không chứa bất kỳ giá trị nào trong (danh sách team ID)    | `"filter":[{"team_set_id":{"$not_in":["team_id1","team_id2"]}}]`    |

    ### Loại trường: phone

    | Toán tử               | Mô tả              | Ví dụ                                                     |
    |-----------------------|--------------------|-----------------------------------------------------------|
    | <nobr>`$starts`</nobr>   | Bắt đầu bằng       | `"filter":[{"phone_work":{"$starts":"+84"}}]`             |
    | <nobr>`$equals`</nobr>   | Khớp chính xác     | `"filter":[{"phone_work":{"$equals":"+84123456789"}}]`     |

    ### Loại trường: radioenum

    | Toán tử               | Mô tả              | Ví dụ                                             |
    |-----------------------|--------------------|---------------------------------------------------|
    | <nobr>`$equals`</nobr>   | Là                 | `"filter":[{"status":{"$equals":"Active"}}]`      |
    | <nobr>`$not_equals`</nobr>| Không là           | `"filter":[{"status":{"$not_equals":"Inactive"}}]` |

    ### Loại trường: parent

    | Toán tử               | Mô tả                          | Ví dụ                                                  |
    |-----------------------|--------------------------------|--------------------------------------------------------|
    | <nobr>`$equals`</nobr>   | Là (ID của bản ghi cha)         | `"filter":[{"parent_id":{"$equals":"record_id"}}]`     |

    ### Loại trường: tag

    | Toán tử               | Mô tả                                                                    | Ví dụ                                                                 |
    |-----------------------|--------------------------------------------------------------------------|-----------------------------------------------------------------------|
    | <nobr>`$in`</nobr>          | Chứa ít nhất một trong các giá trị (danh sách tag)                      | `"filter":[{"tag":{"$in":["tag1","tag2"]}}]`                          |
    | <nobr>`$not_in`</nobr>      | Không chứa bất kỳ giá trị nào trong (danh sách tag)                    | `"filter":[{"tag":{"$not_in":["tag1","tag2"]}}]`                     |
    | <nobr>`$empty`</nobr>       | Trống                                                                    | `"filter":[{"tag":{"$empty":""}}]`                                   |
    | <nobr>`$not_empty`</nobr>   | Không trống                                                              | `"filter":[{"tag":{"$not_empty":""}}]`                               |



    ## Các Điều Kiện Logic trong Bộ Lọc

    Các điều kiện logic cho phép bạn kết hợp nhiều bộ lọc thành các biểu thức phức tạp. Hệ thống hỗ trợ ba toán tử logic chính: `$and`, `$or` và `$not`.

    ### 1. Toán tử $and

    Toán tử `$and` yêu cầu tất cả các điều kiện bên trong phải đúng.

    **Cú pháp:**

    ```
    "filter":[
      {
        "$and": [
          {ĐIỀU KIỆN 1},
          {ĐIỀU KIỆN 2},
          ...
        ]
      }
    ]
    ```

    **Ví dụ:** Lọc các account thuộc ngành "Technology" và có doanh thu trên 1 triệu

    ```
    "filter":[
      {
        "$and": [
          {"industry": {"$equals": "Technology"}},
          {"annual_revenue": {"$gt": 1000000}}
        ]
      }
    ]
    ```

    ### 2. Toán tử $or

    Toán tử `$or` yêu cầu ít nhất một điều kiện bên trong phải đúng.

    **Cú pháp:**

    ```
    "filter":[
      {
        "$or": [
          {ĐIỀU KIỆN 1},
          {ĐIỀU KIỆN 2},
          ...
        ]
      }
    ]
    ```

    **Ví dụ:** Lọc các contact ở TP.HCM hoặc Hà Nội

    ```
    "filter":[
      {
        "$or": [
          {"primary_address_city": {"$equals": "TP.HCM"}},
          {"primary_address_city": {"$equals": "Hà Nội"}}
        ]
      }
    ]
    ```

    ### 3. Toán tử $not

    Toán tử `$not` phủ định một điều kiện.

    **Cú pháp:**

    ```
    "filter":[
      {
        "$not": {ĐIỀU KIỆN}
      }
    ]
    ```

    **Ví dụ:** Lọc các account không thuộc ngành "Retail"

    ```
    "filter":[
      {
        "$not": {
          "industry": {"$equals": "Retail"}
        }
      }
    ]
    ```

    ### 4. Kết hợp nhiều toán tử logic

    Bạn có thể kết hợp các toán tử logic để tạo ra các biểu thức phức tạp.

    **Ví dụ:** Lọc các deal có giá trị trên $10,000 và (status là "Closed Won" hoặc "Negotiation")

    ```
    "filter":[
      {
        "$and": [
          {"amount": {"$gt": 10000}},
          {
            "$or": [
              {"sales_stage": {"$equals": "Closed Won"}},
              {"sales_stage": {"$equals": "Negotiation"}}
            ]
          }
        ]
      }
    ]
    ```

    ### 5. Các lưu ý quan trọng

    - Bạn có thể lồng các toán tử logic nhiều mức tùy theo nhu cầu
    - Thứ tự ưu tiên: `$not` > `$and` > `$or`
    - Để kiểm soát thứ tự thực hiện, hãy sử dụng các nhóm điều kiện rõ ràng
    - Khi kết hợp nhiều điều kiện cùng cấp độ, hệ thống sẽ tự động xử lý như toán tử `$and`
    - Đối với các bộ lọc phức tạp, nên định dạng code rõ ràng để dễ bảo trì

    **Ví dụ thứ tự ưu tiên:** Biểu thức `A OR B AND C` sẽ được hiểu là `A OR (B AND C)`

    ```
    "filter":[
      {
        "$or": [
          {"A": ...},
          {
            "$and": [
              {"B": ...},
              {"C": ...}
            ]
          }
        ]
      }
    ]
    ```

    ## Các biểu thức bộ lọc mẫu

    Dưới đây là các ví dụ về biểu thức bộ lọc phức tạp thường gặp trong thực tế:

    ### 1. Kết hợp nhiều điều kiện với $and

    Lọc các account có ngành là "Technology" và doanh thu trên 1 triệu:

    ```
    "filter":[
      {
        "$and": [
          {"industry": {"$equals": "Technology"}},
          {"annual_revenue": {"$gt": 1000000}}
        ]
      }
    ]
    ```

    ### 2. Kết hợp điều kiện với $or

    Lọc các contact ở TP.HCM hoặc Hà Nội:

    ```
    "filter":[
      {
        "$or": [
          {"primary_address_city": {"$equals": "TP.HCM"}},
          {"primary_address_city": {"$equals": "Hà Nội"}}
        ]
      }
    ]
    ```

    ### 3. Lồng ghép $and và $or

    Lọc các deal có giá trị trên $10,000 và (status là "Closed Won" hoặc "Negotiation"):

    ```
    "filter":[
      {
        "$and": [
          {"amount": {"$gt": 10000}},
          {
            "$or": [
              {"sales_stage": {"$equals": "Closed Won"}},
              {"sales_stage": {"$equals": "Negotiation"}}
            ]
          }
        ]
      }
    ]
    ```

    ### 4. Kết hợp điều kiện ngày và giá trị

    Lọc các task được tạo trong tháng này và có độ ưu tiên cao:

    ```
    "filter":[
      {
        "$and": [
          {"date_entered": {"this_month": ""}},
          {"priority": {"$equals": "High"}}
        ]
      }
    ]
    ```

    ### 5. Lọc với trường relate và enum

    Lọc các case được gán cho user A hoặc user B và có mức độ nghiêm trọng cao:

    ```
    "filter":[
      {
        "$and": [
          {"assigned_user_id": {"$in": ["userA_id", "userB_id"]}},
          {"severity": {"$equals": "High"}}
        ]
      }
    ]
    ```

    ### 6. Lọc với $not và $or

    Lọc các account không thuộc ngành "Retail" hoặc "Hospitality":

    ```
    "filter":[
      {
        "$not": {
          "industry": {"$in": ["Retail", "Hospitality"]}
        }
      }
    ]
    ```

    ### 7. Lọc kết hợp multienum và date

    Lọc các campaign có category chứa "Email" hoặc "Social" và diễn ra trong năm nay:

    ```
    "filter":[
      {
        "$and": [
          {"campaign_category": {"$contains": ["Email", "Social"]}},
          {"start_date": {"this_year": ""}}
        ]
      }
    ]
    ```

    ### 8. Lọc với trường tag phức tạp

    Lọc các bản ghi có tag "VIP" hoặc "Important" nhưng không có tag "Test":

    ```
    "filter":[
      {
        "$and": [
          {"tag": {"$in": ["VIP", "Important"]}},
          {"tag": {"$not_in": ["Test"]}}
        ]
      }
    ]
    ```

    ### 9. Lọc với giá trị null/empty

    Lọc các lead có email nhưng không có số điện thoại:

    ```
    "filter":[
      {
        "$and": [
          {"email": {"$not_empty": ""}},
          {"phone_mobile": {"$empty": ""}}
        ]
      }
    ]
    ```

    ### 10. Lọc với nhiều mức độ lồng nhau

    Lọc các opportunity có amount > $50,000 và (ngành là "Technology" hoặc (ngành là "Finance" và probability > 70%)):

    ```
    "filter":[
      {
        "$and": [
          {"amount": {"$gt": 50000}},
          {
            "$or": [
              {"account_type": {"$equals": "Technology"}},
              {
                "$and": [
                  {"account_type": {"$equals": "Finance"}},
                  {"probability": {"$gt": 70}}
                ]
              }
            ]
          }
        ]
      }
    ]
    ```
servers:
  - url: http://your-base-url/rest/v11_3
tags:
  - name: Lists API
    description: API lọc danh sách bản ghi (cần token xác thực)
  - name: Records API
    description: API thao tác trên từng bản ghi cụ thể (cần token xác thực)
paths:
  /{module}:
    get:
      tags:
        - Lists API
      summary: Lấy danh sách bản ghi của module (LIST ALL)
      description: |
        Endpoint trả về toàn bộ các bản ghi (hoặc danh sách các bản ghi tương ứng nếu được lọc theo biểu thức) của module được chỉ định. 

        Bộ lọc có thể áp dụng cho nhiều trường và có thể có nhiều điều kiện trong đó. 
        Cần lưu ý đảm bảo rằng bất kỳ bộ lọc nào được sử dụng đều có các chỉ mục thích hợp trên phía máy chủ, nếu không thời gian chạy của endpoint sẽ rất lâu.
      operationId: filterModuleAll
      parameters:
        - name: module
          in: path
          description: 'Tên module (ví dụ: Accounts, Contacts).'
          required: true
          schema:
            type: string
        - name: filter
          in: query
          description: Biểu thức bộ lọc (xem chi tiết tại [Biểu thức bộ lọc](./#section/Bieu-thuc-bo-loc-(filter)))
          required: false
          schema:
            type: string
        - name: max_num
          in: query
          description: 'Số bản ghi tối đa trả về (Ví dụ: 100).'
          required: false
          schema:
            type: integer
        - name: offset
          in: query
          description: Số bản ghi bỏ qua trước khi danh sách được trả về.
          required: false
          schema:
            type: integer
        - name: fields
          in: query
          description: Danh sách trường muốn được trả về.
          required: false
          schema:
            type: string
        - name: order_by
          in: query
          description: Sắp xếp kết quả.
          required: false
          schema:
            type: string
        - name: deleted
          in: query
          description: Cho phép hiển thị bản ghi đã xóa.
          required: false
          schema:
            type: boolean
        - name: nulls_last
          in: query
          description: Đưa các giá trị null xuống cuối danh sách trả về khi sắp xếp.
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: Thành công, trả về mảng bản ghi
          content:
            application/json:
              schema:
                type: object
                properties:
                  next_offset:
                    type: integer
                    description: offset cho lần gọi kế tiếp, giá trị là -1 nếu không còn bản ghi
                    example: -1
                  records:
                    type: array
                    description: danh sách các bản ghi kết quả.
                    example:
                      - id: fa300a0e-0ad1-b322-9601-512d0983c19a
                        name: Nelson Inc
                        date_modified: '2013-02-28T05:03:00+00:00'
                        description: ''
                        opportunities:
                          - _module: Opportunities
                            id: b0701501-1fab-8ae7-3942-540da93f5017
                            name: 360 Vacations - 228 Units
                            date_modified: '2014-09-08T16:05:00+03:00'
                            sales_status: New
                        _acl:
                          fields: {}
                      - id: 95e17367-9b3d-0e26-22dc-512d0961fedf
                        name: Florence Haddock
                        date_modified: '2013-02-26T19:12:00+00:00'
                        description: ''
                        opportunities:
                          - _module: Opportunities
                            id: 9ce7c088-8ee4-7cd3-18f1-540da944d4c0
                            name: 360 Vacations - 312 Units
                            date_modified: '2014-09-08T16:05:00+03:00'
                            sales_status: New
                        _acl:
                          fields: {}
      security:
        - BearerAuth: []
    post:
      tags:
        - Records API
      summary: Tạo mới bản ghi (Create Record)
      description: |
        Tạo một bản ghi mới cho module cụ thể.
        Endpoint luôn yêu cầu truyền đúng tham số là tên module theo dạng API name (Ví dụ: Contacts, Accounts, Targets, Prospects).

        ### Request Body

        Là một mảng JSON gồm các trường cần thiết để tạo record cho module tương ứng. 

        | Tên trường       | Loại trường         | Mô tả                                                                  | Bắt buộc |
        |------------------|---------------------|-----------------------------------------------------------------------|-------------------------------|
        | <nobr>`record field`</nobr>   | <nobr>`record field type`</nobr> | Danh sách tên - giá trị của các field để gán cho bản ghi. Có thể bao gồm cả các liên kết (link fields) để tạo hoặc liên kết các record khác.| True |

        ### Link fields 

        Có thể thao tác để thêm vào record mới các relationship link tới các record khác tương ứng, ứng với id được truyền vào.

        Xét ví dụ về một request body sau:

        ```json
        {
          "name":"Example Account",
          "account_type":"Customer",
          "description":"My Example Account",
          "meetings": {
            {
                "add": [
                     "21e3385e-404f-b470-407e-54044e3d8023", 
                     "62e3555e-403f-c470-404e-54066e3d8023"
                ],
                "create": [
                {
                    "name": "Test Meeting"
                }
              ]
            }
          }
        }
        ```

        Mảng bên trong trường `meetings` đó, gồm có `add` và `create`

        `add`: Là danh sách các ID của những bản ghi `Meetings` đã tồn tại muốn liên kết vào record mới.

        `create`: Là mảng các object chứa dữ liệu của những `Meetings` mới, nó sẽ được tạo ngay lập tức và tự động liên kết vào record mới.
      operationId: createRecord
      parameters:
        - name: module
          in: path
          description: 'Tên module (ví dụ: Accounts, Contacts).'
          required: true
          schema:
            type: string
            example: Accounts
      requestBody:
        required: true
        description: |
          Ở đây là sample của request để tạo một Lead mới.
          Tùy vào nhu cầu sử dụng, có thể thay đổi request body thành các trường khác tương ứng cho phù hợp.
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                  description: Tên
                  example: Nguyễn
                last_name:
                  type: string
                  description: Họ
                  example: Văn A
                email:
                  type: string
                  format: email
                  description: Email
                  example: vana@example.com
                phone_mobile:
                  type: string
                  description: Số điện thoại
                  example: '0987654321'
                lead_source:
                  type: string
                  description: Nguồn Lead
                  example: Walk in
                status:
                  type: string
                  description: Trạng thái Lead
                  example: New
            example:
              first_name: Nguyễn
              last_name: Văn A
              email: vana@example.com
              phone_mobile: '0987654321'
              lead_source: Walk in
              status: New
      responses:
        '200':
          description: Thành công – trả về bản ghi vừa tạo
          content:
            application/json:
              example:
                id: 6f3b993c-4fed-11f0-9a60-cc28aa8bf61e
                name: Văn A Nguyễn
                date_entered: '2025-06-23T11:49:23+07:00'
                date_modified: '2025-06-23T11:49:23+07:00'
                modified_user_id: '1'
                modified_by_name: Administrator
                modified_user_link:
                  full_name: Administrator
                  id: '1'
                  _acl:
                    fields:
                      pwd_last_changed:
                        write: 'no'
                        create: 'no'
                      last_login:
                        write: 'no'
                        create: 'no'
                    delete: 'no'
                    _hash: 08b99a97c2e8d792f7a44d8882b5af6d
                created_by: '1'
                created_by_name: Administrator
                created_by_link:
                  full_name: Administrator
                  id: '1'
                  _acl:
                    fields:
                      pwd_last_changed:
                        write: 'no'
                        create: 'no'
                      last_login:
                        write: 'no'
                        create: 'no'
                    delete: 'no'
                    _hash: 08b99a97c2e8d792f7a44d8882b5af6d
                description: ''
                deleted: false
                approval_status: ''
                salutation: ''
                first_name: Nguyễn
                last_name: Văn A
                full_name: Văn A Nguyễn
                title: ''
                facebook: ''
                twitter: ''
                department: ''
                do_not_call: false
                phone_home: ''
                phone_mobile: '0987654321'
                phone_work: ''
                phone_other: ''
                phone_fax: ''
                primary_address_street: ''
                primary_address_street_2: ''
                primary_address_street_3: ''
                primary_address_city: ''
                primary_address_state: ''
                primary_address_postalcode: ''
                primary_address_country: ''
                alt_address_street: ''
                alt_address_street_2: ''
                alt_address_street_3: ''
                alt_address_city: ''
                alt_address_state: ''
                alt_address_postalcode: ''
                alt_address_country: ''
                assistant: Van A Nguyen
                assistant_phone: ''
                picture: ''
                pri_latitude: null
                pri_longitude: null
                alt_latitude: null
                alt_longitude: null
                date_performed: ''
                performed_user_id: ''
                performed_by_name: ''
                performed_user_link:
                  full_name: ''
                  id: ''
                  _acl:
                    fields: []
                    _hash: 654d337e0e912edaa00dbb0fb3dc3c17
                last_call_status: ''
                last_call_result: ''
                last_call_date: ''
                first_call_date: ''
                first_call_result: ''
                last_pt_date: ''
                last_pt_status: ''
                last_visited: ''
                group_source: ''
                converted: false
                refered_by: ''
                lead_source: Walk in
                source_description: ''
                status: New
                status_description: ''
                reports_to_id: ''
                report_to_name: ''
                dp_business_purpose: []
                dp_consent_last_updated: '2025-06-23'
                account_name: ''
                account_to_lead: ''
                accounts:
                  name: ''
                  id: ''
                  _acl:
                    fields: []
                    _hash: 654d337e0e912edaa00dbb0fb3dc3c17
                account_description: ''
                contact_id: ''
                contact_name: ''
                contacts:
                  name: ''
                  id: ''
                  _acl:
                    fields: []
                    _hash: 654d337e0e912edaa00dbb0fb3dc3c17
                account_id: ''
                opportunity_id: ''
                converted_opp_name: ''
                opportunity:
                  name: ''
                  id: ''
                  _acl:
                    fields: []
                    _hash: 654d337e0e912edaa00dbb3dc3c17
                opportunity_name: ''
                opportunity_amount: ''
                campaign_id: ''
                campaign_name: ''
                campaign_leads:
                  name: ''
                  id: ''
                  _acl:
                    fields: []
                    _hash: 654d337e0e912edaa00dbb0fb3dc3c17
                c_accept_status_fields: ''
                calls:
                  id: ''
                m_accept_status_fields: ''
                meetings:
                  id: ''
                accept_status_id: ''
                accept_status_name: ''
                accept_status_calls: ''
                accept_status_meetings: ''
                webtolead_email1: []
                webtolead_email2: []
                webtolead_email_opt_out: ''
                webtolead_invalid_email: ''
                birthdate: ''
                portal_name: ''
                portal_app: ''
                website: ''
                preferred_language: ''
                onl_uid: ''
                phone_prefix: '84'
                is_migrate_data: true
                following: false
                my_favorite: false
                tag: []
                locked_fields: []
                assigned_user_id: ''
                assigned_user_name: ''
                assigned_user_link:
                  full_name: ''
                  id: ''
                  _acl:
                    fields: []
                    _hash: 654d337e0e912edaa00dbb0fb3dc3c17
                team_count: ''
                team_count_link:
                  team_count: ''
                  id: 6960e90c-4587-11ef-8351-2070492d436e
                  _acl:
                    fields: []
                    _hash: 654d337e0e912edaa00dbb0fb3dc3c17
                team_name:
                  - id: 6960e90c-4587-11ef-8351-2070492d436e
                    name: CS Mầm Non/2.0
                    name_2: ''
                    primary: true
                    selected: false
                email: []
                email1: ''
                email2: ''
                invalid_email: ''
                email_opt_out: ''
                email_addresses_non_primary: ''
                gender: ''
                guardian_name: ''
                guardian_name_2: ''
                nick_name: ''
                other_mobile: ''
                relationship: ''
                relationship2: ''
                grade: ''
                phone_guardian: ''
                prefer_level: []
                age: null
                age_text: 0 month(s)
                full_lead_name: Văn A Nguyễn
                potential: Interested
                old_student_id: ''
                school_name: ''
                j_school_link:
                  name: ''
                  id: ''
                  _acl:
                    fields: []
                    _hash: 654d337e0e912edaa00dbb0fb3dc3c17
                dri_workflow_template_id: ''
                dri_workflow_template_name: ''
                dri_workflow_template_link:
                  name: ''
                  id: ''
                  _acl:
                    fields: []
                    _hash: 654d337e0e912edaa00dbb0fb3dc3c17
                class_activity: ''
                schedule_call_status: ''
                schedule_call_date: ''
                is_today_birthday: ''
                allow_create: ''
                reason: ''
                reference_logs: ''
                cj_process_key: ''
                reference: ''
                utm_source: ''
                utm_medium: ''
                utm_content: ''
                utm_term: ''
                channel: ''
                utm_agent_id: ''
                utm_agent: ''
                utm_agent_link:
                  name: ''
                  id: ''
                  _acl:
                    fields: []
                    _hash: 654d337e0e912edaa00dbb0fb3dc3c17
                school_id: ''
                team_name_text: CS Mầm Non/2.0
                _acl:
                  fields: {}
                _module: Leads
      security:
        - BearerAuth: []
  /{module}/count:
    get:
      tags:
        - Lists API
      summary: Lấy tổng số bản ghi (COUNT)
      description: |
        Endpoint trả về số lượng các bản ghi (hoặc danh sách các bản ghi tương ứng nếu được lọc theo biểu thức) của module được chỉ định. 

        Bộ lọc có thể áp dụng cho nhiều trường và có thể có nhiều điều kiện trong đó. 
        Cần lưu ý đảm bảo rằng bất kỳ bộ lọc nào được sử dụng đều có các chỉ mục thích hợp trên phía máy chủ, nếu không thời gian chạy của endpoint sẽ rất lâu.
      operationId: filterModuleAllCount
      parameters:
        - name: module
          in: path
          description: 'Tên module (ví dụ: Accounts, Contacts).'
          required: true
          schema:
            type: string
        - name: filter
          in: query
          description: Biểu thức bộ lọc (xem chi tiết tại [Biểu thức bộ lọc](./#section/Bieu-thuc-bo-loc-(filter)))
          required: false
          schema:
            type: string
        - name: max_num
          in: query
          description: 'Số bản ghi tối đa trả về (Ví dụ: 100).'
          required: false
          schema:
            type: integer
        - name: offset
          in: query
          description: Số bản ghi bỏ qua trước khi danh sách được trả về.
          required: false
          schema:
            type: integer
        - name: fields
          in: query
          description: Danh sách trường muốn được trả về.
          required: false
          schema:
            type: string
        - name: order_by
          in: query
          description: Sắp xếp kết quả.
          required: false
          schema:
            type: string
        - name: deleted
          in: query
          description: Cho phép hiển thị bản ghi đã xóa.
          required: false
          schema:
            type: boolean
        - name: nulls_last
          in: query
          description: Đưa các giá trị null xuống cuối danh sách trả về khi sắp xếp.
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: Thành công, trả về số lượng bản ghi.
          content:
            application/json:
              schema:
                type: object
                properties:
                  record_count:
                    type: integer
                    description: Tổng số bản ghi thỏa filter (hoặc toàn bộ nếu không có filter).
                    example: 1234
      security:
        - BearerAuth: []
  /{module}/filter:
    get:
      tags:
        - Lists API
      summary: Lấy danh sách bản ghi đã được lọc (GET)
      description: |
        Endpoint trả về danh sách các bản ghi tương ứng được lọc theo biểu thức của module được chỉ định. 

        Bộ lọc có thể áp dụng cho nhiều trường và có thể có nhiều điều kiện trong đó. 
        Cần lưu ý đảm bảo rằng bất kỳ bộ lọc nào được sử dụng đều có các chỉ mục thích hợp trên phía máy chủ, nếu không thời gian chạy của endpoint sẽ rất lâu.
      operationId: filterModuleGet
      parameters:
        - name: module
          in: path
          description: 'Tên module (ví dụ: Accounts, Contacts).'
          required: true
          schema:
            type: string
        - name: filter
          in: query
          description: Biểu thức bộ lọc (xem chi tiết tại [Biểu thức bộ lọc](./#section/Bieu-thuc-bo-loc-(filter)))
          required: false
          schema:
            type: string
        - name: max_num
          in: query
          description: 'Số bản ghi tối đa trả về (Ví dụ: 100).'
          required: false
          schema:
            type: integer
        - name: offset
          in: query
          description: Số bản ghi bỏ qua trước khi danh sách được trả về.
          required: false
          schema:
            type: integer
        - name: fields
          in: query
          description: Danh sách trường muốn được trả về.
          required: false
          schema:
            type: string
        - name: order_by
          in: query
          description: Sắp xếp kết quả.
          required: false
          schema:
            type: string
        - name: deleted
          in: query
          description: Cho phép hiển thị bản ghi đã xóa.
          required: false
          schema:
            type: boolean
        - name: nulls_last
          in: query
          description: Đưa các giá trị null xuống cuối danh sách trả về khi sắp xếp.
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: Thành công, trả về mảng bản ghi
          content:
            application/json:
              example:
                next_offset: -1
                records:
                  - id: fa300a0e-0ad1-b322-9601-512d0983c19a
                    name: Nelson Inc
                    date_modified: '2013-02-28T05:03:00+00:00'
                    description: ''
                    opportunities:
                      - _module: Opportunities
                        id: b0701501-1fab-8ae7-3942-540da93f5017
                        name: 360 Vacations - 228 Units
                        date_modified: '2014-09-08T16:05:00+03:00'
                        sales_status: New
                    _acl:
                      fields: {}
                  - id: 95e17367-9b3d-0e26-22dc-512d0961fedf
                    name: Florence Haddock
                    date_modified: '2013-02-26T19:12:00+00:00'
                    description: ''
                    opportunities:
                      - _module: Opportunities
                        id: 9ce7c088-8ee4-7cd3-18f1-540da944d4c0
                        name: 360 Vacations - 312 Units
                        date_modified: '2014-09-08T16:05:00+03:00'
                        sales_status: New
                    _acl:
                      fields: {}
      security:
        - BearerAuth: []
    post:
      tags:
        - Lists API
      summary: Lấy danh sách bản ghi đã được lọc (POST)
      description: |
        *Tương tự GET /filter nhưng nhận filter JSON trong request body, tiện lợi cho filter phức tạp, lồng nhau.*

        Endpoint trả về danh sách các bản ghi tương ứng được lọc theo biểu thức của module được chỉ định. 

        Bộ lọc có thể áp dụng cho nhiều trường và có thể có nhiều điều kiện trong đó. 
        Cần lưu ý đảm bảo rằng bất kỳ bộ lọc nào được sử dụng đều có các chỉ mục thích hợp trên phía máy chủ, nếu không thời gian chạy của endpoint sẽ rất lâu.
      operationId: filterModulePost
      parameters:
        - name: module
          in: path
          description: 'Tên module (ví dụ: Accounts, Contacts, Leads).'
          required: true
          schema:
            type: string
            example: Accounts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                filter:
                  type: string
                  description: Biểu thức bộ lọc (xem chi tiết tại [Biểu thức bộ lọc](./#section/Bieu-thuc-bo-loc-(filter)))
                  example:
                    - $or:
                        - name:
                            $equals: Nelson Inc
                        - name:
                            $equals: Nelson LLC
                max_num:
                  type: integer
                  description: 'Số bản ghi tối đa trả về (Ví dụ: 100).'
                  example: 100
                offset:
                  type: integer
                  description: Số bản ghi bỏ qua trước khi danh sách được trả về.
                  example: 0
                fields:
                  type: string
                  description: Danh sách trường muốn được trả về, phân tách bằng dấu phẩy.
                  example: id,name,date_modified
                order_by:
                  type: string
                  description: 'Sắp xếp kết quả, ví dụ: ''date_modified:desc,name:asc''.'
                  example: date_modified:desc
                deleted:
                  type: boolean
                  description: Cho phép hiển thị bản ghi đã xóa.
                  example: false
                nulls_last:
                  type: boolean
                  description: Đưa các giá trị null xuống cuối danh sách trả về khi sắp xếp.
                  example: true
      responses:
        '200':
          description: Thành công, trả về mảng bản ghi
          content:
            application/json:
              example:
                next_offset: -1
                records:
                  - id: fa300a0e-0ad1-b322-9601-512d0983c19a
                    name: Nelson Inc
                    date_modified: '2013-02-28T05:03:00+00:00'
                    description: ''
                    opportunities:
                      - _module: Opportunities
                        id: b0701501-1fab-8ae7-3942-540da93f5017
                        name: 360 Vacations - 228 Units
                        date_modified: '2014-09-08T16:05:00+03:00'
                        sales_status: New
                    _acl:
                      fields: {}
                  - id: 95e17367-9b3d-0e26-22dc-512d0961fedf
                    name: Florence Haddock
                    date_modified: '2013-02-26T19:12:00+00:00'
                    description: ''
                    opportunities:
                      - _module: Opportunities
                        id: 9ce7c088-8ee4-7cd3-18f1-540da944d4c0
                        name: 360 Vacations - 312 Units
                        date_modified: '2014-09-08T16:05:00+03:00'
                        sales_status: New
                    _acl:
                      fields: {}
      security:
        - BearerAuth: []
  /{module}/filter/count:
    get:
      tags:
        - Lists API
      summary: Lấy tổng số bản ghi đã lọc (COUNT – GET)
      description: |
        Endpoint trả về số lượng các bản ghi tương ứng được lọc theo biểu thức của module được chỉ định. 

        Bộ lọc có thể áp dụng cho nhiều trường và có thể có nhiều điều kiện trong đó. 
        Cần lưu ý đảm bảo rằng bất kỳ bộ lọc nào được sử dụng đều có các chỉ mục thích hợp trên phía máy chủ, nếu không thời gian chạy của endpoint sẽ rất lâu.
      operationId: filterModuleCount
      parameters:
        - name: module
          in: path
          description: 'Tên module (ví dụ: Accounts, Contacts).'
          required: true
          schema:
            type: string
        - name: filter
          in: query
          description: Biểu thức bộ lọc (xem chi tiết tại [Biểu thức bộ lọc](./#section/Bieu-thuc-bo-loc-(filter)))
          required: false
          schema:
            type: string
        - name: max_num
          in: query
          description: 'Số bản ghi tối đa trả về (Ví dụ: 100).'
          required: false
          schema:
            type: integer
        - name: offset
          in: query
          description: Số bản ghi bỏ qua trước khi danh sách được trả về.
          required: false
          schema:
            type: integer
        - name: fields
          in: query
          description: Danh sách trường muốn được trả về.
          required: false
          schema:
            type: string
        - name: order_by
          in: query
          description: Sắp xếp kết quả.
          required: false
          schema:
            type: string
        - name: deleted
          in: query
          description: Cho phép hiển thị bản ghi đã xóa.
          required: false
          schema:
            type: boolean
        - name: nulls_last
          in: query
          description: Đưa các giá trị null xuống cuối danh sách trả về khi sắp xếp.
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: Thành công, trả về số lượng bản ghi đã lọc.
          content:
            application/json:
              schema:
                type: object
                properties:
                  record_count:
                    type: integer
                    description: Số bản ghi thỏa filter.
                    example: 42
      security:
        - BearerAuth: []
    post:
      tags:
        - Lists API
      summary: Lấy tổng số bản ghi đã lọc (COUNT – POST)
      description: |
        *Tương tự GET /filter/count nhưng nhận filter JSON trong request body, tiện lợi cho filter phức tạp, lồng nhau.*

        Endpoint trả về danh sách các bản ghi tương ứng được lọc theo biểu thức của module được chỉ định. 

        Bộ lọc có thể áp dụng cho nhiều trường và có thể có nhiều điều kiện trong đó. 
        Cần lưu ý đảm bảo rằng bất kỳ bộ lọc nào được sử dụng đều có các chỉ mục thích hợp trên phía máy chủ, nếu không thời gian chạy của endpoint sẽ rất lâu.
      operationId: filterModulePostCount
      parameters:
        - name: module
          in: path
          description: Tên module.
          required: true
          schema:
            type: string
            example: Opportunities
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                filter:
                  type: string
                  description: Biểu thức bộ lọc (xem chi tiết tại [Biểu thức bộ lọc](./#section/Bieu-thuc-bo-loc-(filter)))
                  example:
                    - $or:
                        - name:
                            $equals: Nelson Inc
                        - name:
                            $equals: Nelson LLC
                max_num:
                  type: integer
                  description: 'Số bản ghi tối đa trả về (Ví dụ: 100).'
                  example: 100
                offset:
                  type: integer
                  description: Số bản ghi bỏ qua trước khi danh sách được trả về.
                  example: 0
                fields:
                  type: string
                  description: Danh sách trường muốn được trả về, phân tách bằng dấu phẩy.
                  example: id,name,date_modified
                order_by:
                  type: string
                  description: 'Sắp xếp kết quả, ví dụ: ''date_modified:desc,name:asc''.'
                  example: date_modified:desc
                deleted:
                  type: boolean
                  description: Cho phép hiển thị bản ghi đã xóa.
                  example: false
                nulls_last:
                  type: boolean
                  description: Đưa các giá trị null xuống cuối danh sách trả về khi sắp xếp.
                  example: true
      responses:
        '200':
          description: Thành công, trả về số lượng bản ghi đã lọc.
          content:
            application/json:
              schema:
                type: object
                properties:
                  record_count:
                    type: integer
                    description: Số bản ghi thỏa filter.
                    example: 42
      security:
        - BearerAuth: []
  /{module}/{record}:
    get:
      tags:
        - Records API
      summary: Lấy thông tin chi tiết của một bản ghi
      description: Trả về chi tiết của một bản ghi cụ thể trong module, dựa vào ID.
      operationId: getModuleRecord
      parameters:
        - name: module
          in: path
          description: 'Tên module (ví dụ: Accounts, Contacts).'
          required: true
          schema:
            type: string
            example: Accounts
        - name: record
          in: path
          description: ID của bản ghi.
          required: true
          schema:
            type: string
            example: a1b2c3d4-e5f6-7890-1234-567890abcdef
      responses:
        '200':
          description: Thành công trả về bản ghi có ID tương ứng
          content:
            application/json:
              example:
                id: 6f3b993c-4fed-11f0-9a60-cc28aa8bf61e
                name: Văn A Nguyễn
                date_entered: '2025-06-23T11:49:23+07:00'
                date_modified: '2025-06-23T11:49:23+07:00'
                modified_user_id: '1'
                modified_by_name: Administrator
                modified_user_link:
                  full_name: Administrator
                  id: '1'
                  _acl:
                    fields:
                      pwd_last_changed:
                        write: 'no'
                        create: 'no'
                      last_login:
                        write: 'no'
                        create: 'no'
                    delete: 'no'
                    _hash: 08b99a97c2e8d792f7a44d8882b5af6d
                created_by: '1'
                created_by_name: Administrator
                created_by_link:
                  full_name: Administrator
                  id: '1'
                  _acl:
                    fields:
                      pwd_last_changed:
                        write: 'no'
                        create: 'no'
                      last_login:
                        write: 'no'
                        create: 'no'
                    delete: 'no'
                    _hash: 08b99a97c2e8d792f7a44d8882b5af6d
                description: ''
                deleted: false
                approval_status: ''
                salutation: ''
                first_name: Nguyễn
                last_name: Văn A
                full_name: Văn A Nguyễn
                title: ''
                facebook: ''
                twitter: ''
                department: ''
                do_not_call: false
                phone_home: ''
                phone_mobile: '0987654321'
                phone_work: ''
                phone_other: ''
                phone_fax: ''
                primary_address_street: ''
                primary_address_street_2: ''
                primary_address_street_3: ''
                primary_address_city: ''
                primary_address_state: ''
                primary_address_postalcode: ''
                primary_address_country: ''
                alt_address_street: ''
                alt_address_street_2: ''
                alt_address_street_3: ''
                alt_address_city: ''
                alt_address_state: ''
                alt_address_postalcode: ''
                alt_address_country: ''
                assistant: Van A Nguyen
                assistant_phone: ''
                picture: ''
                pri_latitude: null
                pri_longitude: null
                alt_latitude: null
                alt_longitude: null
                date_performed: ''
                performed_user_id: ''
                performed_by_name: ''
                performed_user_link:
                  full_name: ''
                  id: ''
                  _acl:
                    fields: []
                    _hash: 654d337e0e912edaa00dbb0fb3dc3c17
                last_call_status: ''
                last_call_result: ''
                last_call_date: ''
                first_call_date: ''
                first_call_result: ''
                last_pt_date: ''
                last_pt_status: ''
                last_visited: ''
                group_source: ''
                converted: false
                refered_by: ''
                lead_source: Walk in
                source_description: ''
                status: New
                status_description: ''
                reports_to_id: ''
                report_to_name: ''
                dp_business_purpose: []
                dp_consent_last_updated: '2025-06-23'
                account_name: ''
                account_to_lead: ''
                accounts:
                  name: ''
                  id: ''
                  _acl:
                    fields: []
                    _hash: 654d337e0e912edaa00dbb0fb3dc3c17
                account_description: ''
                contact_id: ''
                contact_name: ''
                contacts:
                  name: ''
                  id: ''
                  _acl:
                    fields: []
                    _hash: 654d337e0e912edaa00dbb0fb3dc3c17
                account_id: ''
                opportunity_id: ''
                converted_opp_name: ''
                opportunity:
                  name: ''
                  id: ''
                  _acl:
                    fields: []
                    _hash: 654d337e0e912edaa00dbb3dc3c17
                opportunity_name: ''
                opportunity_amount: ''
                campaign_id: ''
                campaign_name: ''
                campaign_leads:
                  name: ''
                  id: ''
                  _acl:
                    fields: []
                    _hash: 654d337e0e912edaa00dbb0fb3dc3c17
                c_accept_status_fields: ''
                calls:
                  id: ''
                m_accept_status_fields: ''
                meetings:
                  id: ''
                accept_status_id: ''
                accept_status_name: ''
                accept_status_calls: ''
                accept_status_meetings: ''
                webtolead_email1: []
                webtolead_email2: []
                webtolead_email_opt_out: ''
                webtolead_invalid_email: ''
                birthdate: ''
                portal_name: ''
                portal_app: ''
                website: ''
                preferred_language: ''
                onl_uid: ''
                phone_prefix: '84'
                is_migrate_data: true
                following: false
                my_favorite: false
                tag: []
                locked_fields: []
                assigned_user_id: ''
                assigned_user_name: ''
                assigned_user_link:
                  full_name: ''
                  id: ''
                  _acl:
                    fields: []
                    _hash: 654d337e0e912edaa00dbb0fb3dc3c17
                team_count: ''
                team_count_link:
                  team_count: ''
                  id: 6960e90c-4587-11ef-8351-2070492d436e
                  _acl:
                    fields: []
                    _hash: 654d337e0e912edaa00dbb0fb3dc3c17
                team_name:
                  - id: 6960e90c-4587-11ef-8351-2070492d436e
                    name: CS Mầm Non/2.0
                    name_2: ''
                    primary: true
                    selected: false
                email: []
                email1: ''
                email2: ''
                invalid_email: ''
                email_opt_out: ''
                email_addresses_non_primary: ''
                gender: ''
                guardian_name: ''
                guardian_name_2: ''
                nick_name: ''
                other_mobile: ''
                relationship: ''
                relationship2: ''
                grade: ''
                phone_guardian: ''
                prefer_level: []
                age: null
                age_text: 0 month(s)
                full_lead_name: Văn A Nguyễn
                potential: Interested
                old_student_id: ''
                school_name: ''
                j_school_link:
                  name: ''
                  id: ''
                  _acl:
                    fields: []
                    _hash: 654d337e0e912edaa00dbb0fb3dc3c17
                dri_workflow_template_id: ''
                dri_workflow_template_name: ''
                dri_workflow_template_link:
                  name: ''
                  id: ''
                  _acl:
                    fields: []
                    _hash: 654d337e0e912edaa00dbb0fb3dc3c17
                class_activity: ''
                schedule_call_status: ''
                schedule_call_date: ''
                is_today_birthday: ''
                allow_create: ''
                reason: ''
                reference_logs: ''
                cj_process_key: ''
                reference: ''
                utm_source: ''
                utm_medium: ''
                utm_content: ''
                utm_term: ''
                channel: ''
                utm_agent_id: ''
                utm_agent: ''
                utm_agent_link:
                  name: ''
                  id: ''
                  _acl:
                    fields: []
                    _hash: 654d337e0e912edaa00dbb0fb3dc3c17
                school_id: ''
                team_name_text: CS Mầm Non/2.0
                _acl:
                  fields: {}
                _module: Leads
      security:
        - BearerAuth: []
    put:
      tags:
        - Records API
      summary: Cập nhật bản ghi với các trường được chỉ định (Update Record)
      description: |
        Cập nhật bản ghi với các trường cụ thể được chỉ định trong request.

        Endpoint luôn yêu cầu truyền đúng tham số là tên module theo dạng API name (Ví dụ: Contacts, Accounts, Targets, Prospects).

        ### Request Body

        Là một mảng JSON gồm các trường cần thiết để tạo record cho module tương ứng. 

        | Tên trường       | Loại trường         | Mô tả                                                                  | Bắt buộc |
        |------------------|---------------------|-----------------------------------------------------------------------|-------------------------------|
        | <nobr>`record field`</nobr>   | <nobr>`record field type`</nobr> | Danh sách tên - giá trị của các field để gán cho bản ghi. Có thể bao gồm cả các liên kết (link fields) để tạo hoặc liên kết các record khác.| True |

        ### Link fields 

        Có thể thao tác để thêm vào record mới các relationship link tới các record khác tương ứng, ứng với id được truyền vào.

        Xét ví dụ về một request body sau:

        ```json
        {
          "name":"Example Account",
          "account_type":"Customer",
          "description":"My Example Account",
          "meetings": {
            {
                "add": ["21e3385e-404f-b470-407e-54044e3d8024"],
                "delete": ["21e3385e-404f-b470-407e-54044e3d8023"],
                "create": [
                {
                    "name": "Test Meeting"
                }
              ]
            }
          }
        }
        ```

        Mảng bên trong trường `meetings` đó, gồm có `add`, `create` và `delete`

        `add`: Là danh sách các ID của những bản ghi `Meetings` đã tồn tại muốn liên kết vào record mới.

        `create`: Là mảng các object chứa dữ liệu của những `Meetings` mới, nó sẽ được tạo ngay lập tức và tự động liên kết vào record mới.

        `delete`: Là danh sách các ID của những bản ghi `Meetings` đã tồn tại muốn xóa khỏi record.
      operationId: updateRecord
      parameters:
        - name: module
          in: path
          description: 'Tên module (ví dụ: Accounts, Contacts).'
          required: true
          schema:
            type: string
            example: Accounts
        - name: record
          in: path
          description: ID của bản ghi cần cập nhật.
          required: true
          schema:
            type: string
            example: a1b2c3d4-e5f6-7890-1234-567890abcdef
      requestBody:
        required: true
        description: |
          Ở đây là sample của request để chỉnh sửa Lead có sẵn.
          Tùy vào nhu cầu sử dụng, có thể thay đổi request body thành các trường khác tương ứng cho phù hợp.
        content:
          application/json:
            schema:
              type: object
              required:
                - last_name
              properties:
                first_name:
                  type: string
                  description: Tên
                  example: Nguyễn
                last_name:
                  type: string
                  description: Họ
                  example: Văn A phiên bản mới
                email:
                  type: string
                  format: email
                  description: Email chính
                  example: NEWVANA@example.com
                phone_mobile:
                  type: string
                  description: Số điện thoại
                  example: '0987654321'
                lead_source:
                  type: string
                  description: Nguồn Lead
                  example: Call in
                status:
                  type: string
                  description: Trạng thái Lead
                  example: Converted
            example:
              first_name: Nguyễn
              last_name: Văn A phiên bản mới
              email: NEWVANA@example.com
              phone_mobile: '0987654321'
              lead_source: Call in
              status: Converted
      responses:
        '200':
          description: Thành công - trả về record vừa được chỉnh sửa
          content:
            application/json:
              example:
                id: 6f3b993c-4fed-11f0-9a60-cc28aa8bf61e
                name: Văn A Phiên Bản Mới Nguyễn
                date_entered: '2025-06-23T11:49:23+07:00'
                date_modified: '2025-06-23T11:59:29+07:00'
                modified_user_id: '1'
                modified_by_name: Administrator
                modified_user_link:
                  full_name: Administrator
                  id: '1'
                  _acl:
                    fields:
                      pwd_last_changed:
                        write: 'no'
                        create: 'no'
                      last_login:
                        write: 'no'
                        create: 'no'
                    delete: 'no'
                    _hash: 08b99a97c2e8d792f7a44d8882b5af6d
                created_by: '1'
                created_by_name: Administrator
                created_by_link:
                  full_name: Administrator
                  id: '1'
                  _acl:
                    fields:
                      pwd_last_changed:
                        write: 'no'
                        create: 'no'
                      last_login:
                        write: 'no'
                        create: 'no'
                    delete: 'no'
                    _hash: 08b99a97c2e8d792f7a44d8882b5af6d
                description: ''
                deleted: false
                approval_status: ''
                salutation: ''
                first_name: Nguyễn
                last_name: Văn A Phiên Bản Mới
                full_name: Văn A Phiên Bản Mới Nguyễn
                title: ''
                facebook: ''
                twitter: ''
                department: ''
                do_not_call: false
                phone_home: ''
                phone_mobile: '0987654321'
                phone_work: ''
                phone_other: ''
                phone_fax: ''
                primary_address_street: ''
                primary_address_street_2: ''
                primary_address_street_3: ''
                primary_address_city: ''
                primary_address_state: ''
                primary_address_postalcode: ''
                primary_address_country: ''
                alt_address_street: ''
                alt_address_street_2: ''
                alt_address_street_3: ''
                alt_address_city: ''
                alt_address_state: ''
                alt_address_postalcode: ''
                alt_address_country: ''
                assistant: Van A Phien Ban Moi Nguyen
                assistant_phone: ''
                picture: ''
                pri_latitude: null
                pri_longitude: null
                alt_latitude: null
                alt_longitude: null
                date_performed: ''
                performed_user_id: ''
                performed_by_name: ''
                performed_user_link:
                  full_name: ''
                  id: ''
                  _acl:
                    fields: []
                    _hash: 654d337e0e912edaa00dbb0fb3dc3c17
                last_call_status: ''
                last_call_result: ''
                last_call_date: ''
                first_call_date: ''
                first_call_result: ''
                last_pt_date: ''
                last_pt_status: ''
                last_visited: ''
                group_source: ''
                converted: false
                refered_by: ''
                lead_source: Call in
                source_description: ''
                status: Converted
                status_description: ''
                reports_to_id: ''
                report_to_name: ''
                dp_business_purpose: []
                dp_consent_last_updated: '2025-06-23'
                account_name: ''
                account_to_lead: ''
                accounts:
                  name: ''
                  id: ''
                  _acl:
                    fields: []
                    _hash: 654d337e0e912edaa00dbb0fb3dc3c17
                account_description: ''
                contact_id: ''
                contact_name: ''
                contacts:
                  name: ''
                  id: ''
                  _acl:
                    fields: []
                    _hash: 654d337e0e912edaa00dbb0fb3dc3c17
                account_id: ''
                opportunity_id: ''
                converted_opp_name: ''
                opportunity:
                  name: ''
                  id: ''
                  _acl:
                    fields: []
                    _hash: 654d337e0e912edaa00dbb0fb3dc3c17
                opportunity_name: ''
                opportunity_amount: ''
                campaign_id: ''
                campaign_name: ''
                campaign_leads:
                  name: ''
                  id: ''
                  _acl:
                    fields: []
                    _hash: 654d337e0e912edaa00dbb0fb3dc3c17
                c_accept_status_fields: ''
                calls:
                  id: ''
                m_accept_status_fields: ''
                meetings:
                  id: ''
                accept_status_id: ''
                accept_status_name: ''
                accept_status_calls: ''
                accept_status_meetings: ''
                webtolead_email1: []
                webtolead_email2: []
                webtolead_email_opt_out: ''
                webtolead_invalid_email: ''
                birthdate: ''
                portal_name: ''
                portal_app: ''
                website: ''
                preferred_language: ''
                onl_uid: ''
                phone_prefix: '84'
                is_migrate_data: true
                following: false
                my_favorite: false
                tag: []
                locked_fields: []
                assigned_user_id: ''
                assigned_user_name: ''
                assigned_user_link:
                  full_name: ''
                  id: ''
                  _acl:
                    fields: []
                    _hash: 654d337e0e912edaa00dbb0fb3dc3c17
                team_count: ''
                team_count_link:
                  team_count: ''
                  id: 6960e90c-4587-11ef-8351-2070492d436e
                  _acl:
                    fields: []
                    _hash: 654d337e0e912edaa00dbb0fb3dc3c17
                team_name:
                  - id: 6960e90c-4587-11ef-8351-2070492d436e
                    name: CS Mầm Non/2.0
                    name_2: ''
                    primary: true
                    selected: false
                email: []
                email1: ''
                email2: ''
                invalid_email: ''
                email_opt_out: ''
                email_addresses_non_primary: ''
                gender: ''
                guardian_name: ''
                guardian_name_2: ''
                nick_name: ''
                other_mobile: ''
                relationship: ''
                relationship2: ''
                grade: ''
                phone_guardian: ''
                prefer_level: []
                age: null
                age_text: 0 month(s)
                full_lead_name: Văn A Phiên Bản Mới Nguyễn
                potential: Interested
                old_student_id: ''
                school_name: ''
                j_school_link:
                  name: ''
                  id: ''
                  _acl:
                    fields: []
                    _hash: 654d337e0e912edaa00dbb0fb3dc3c17
                dri_workflow_template_id: ''
                dri_workflow_template_name: ''
                dri_workflow_template_link:
                  name: ''
                  id: ''
                  _acl:
                    fields: []
                    _hash: 654d337e0e912edaa00dbb0fb3dc3c17
                class_activity: ''
                schedule_call_status: ''
                schedule_call_date: ''
                is_today_birthday: ''
                allow_create: ''
                reason: ''
                reference_logs: ''
                cj_process_key: ''
                reference: ''
                utm_source: ''
                utm_medium: ''
                utm_content: ''
                utm_term: ''
                channel: ''
                utm_agent_id: ''
                utm_agent: ''
                utm_agent_link:
                  name: ''
                  id: ''
                  _acl:
                    fields: []
                    _hash: 654d337e0e912edaa00dbb0fb3dc3c17
                school_id: ''
                team_name_text: CS Mầm Non/2.0
                _acl:
                  fields: {}
                _module: Leads
      security:
        - BearerAuth: []
    delete:
      tags:
        - Records API
      summary: Xóa bản ghi theo ID
      description: Xóa một bản ghi trong module đã chỉ định.
      operationId: deleteModuleRecord
      parameters:
        - name: module
          in: path
          description: 'Tên module (ví dụ: Accounts, Contacts).'
          required: true
          schema:
            type: string
            example: Accounts
        - name: record
          in: path
          description: ID của bản ghi cần xóa.
          required: true
          schema:
            type: string
            example: 11cf0d0a-40af-8cb1-9da0-5057a5f511f9
      responses:
        '200':
          description: Xóa thành công, trả về ID bản ghi vừa xóa
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: ID của bản ghi đã bị xóa
                    example: 11cf0d0a-40af-8cb1-9da0-5057a5f511f9
      security:
        - BearerAuth: []
components:
  securitySchemes:
    BearerAuth:
      type: apiKey
      name: Authorization
      in: header
      description: 'Nhập Bearer token theo định dạng: `Bearer <access_token>`'
info.description: null
